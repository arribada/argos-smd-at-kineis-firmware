##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.2.0-B44] date: [Mon Feb 05 16:13:47 GST 2024]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = SMD-AT-Kineis


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og

KRD_BOARD = KRD_FW_MP

#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

# Kineis related
KINEIS_VERSION = v1.0.0
KINEIS_DIR = Kineis

# Doc/doxygen path
DOC_DIR = $(KINEIS_DIR)/doc
DOXY_WARN_LOGFILE = $(KINEIS_DIR)/doxy_warn_log_file.txt

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/gpio.c \
Core/Src/dma.c \
Core/Src/i2c.c \
Core/Src/usart.c \
Core/Src/subghz.c \
Core/Src/tim.c \
Core/Src/stm32wlxx_it.c \
Core/Src/stm32wlxx_hal_msp.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_rcc.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_rcc_ex.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash_ex.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_gpio.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_dma.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_dma_ex.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_cortex.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_exti.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_i2c.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_i2c_ex.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_subghz.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_tim.c \
Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_tim_ex.c \
Core/Src/system_stm32wlxx.c  

C_SOURCES += \
$(KINEIS_DIR)/Lib/build_info.c \
$(KINEIS_DIR)/Extdep/Conf/kns_assert.c \
$(KINEIS_DIR)/Extdep/Conf/kns_q_conf.c \
$(KINEIS_DIR)/Extdep/MGR_LOG/Src/mgr_log.c \
$(KINEIS_DIR)/Extdep/Mcu/Src/mcu_misc.c \
$(KINEIS_DIR)/Extdep/Mcu/Src/mcu_aes.c \
$(KINEIS_DIR)/Extdep/Mcu/Src/aes.c \
$(KINEIS_DIR)/Extdep/Mcu/Src/mcu_nvm.c \
$(KINEIS_DIR)/App/Kineis_os/KNS_Q/Src/kns_q.c \
$(KINEIS_DIR)/App/Kineis_os/KNS_OS/Src/kns_os.c \
$(KINEIS_DIR)/App/kns_app.c \
$(KINEIS_DIR)/App/Mcu/Src/mcu_at_console.c \
$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Src/mgr_at_cmd.c \
$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Src/mgr_at_cmd_common.c \
$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Src/mgr_at_cmd_list.c \
$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Src/mgr_at_cmd_list_user_data.c \
$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Src/mgr_at_cmd_list_general.c \
$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Src/mgr_at_cmd_list_mac.c \
$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Src/mgr_at_cmd_list_previpass.c \
$(KINEIS_DIR)/App/Libs/STRUTIL/Src/strutil_lib.c \
$(KINEIS_DIR)/App/Libs/USERDATA/Src/user_data.c

# ASM sources
ASM_SOURCES =  \
startup_stm32wl55xx_cm4.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DCORE_CM4 \
-DUSE_HAL_DRIVER \
-DSTM32WL55xx \
-DUSE_LOCAL_PRINTF \
-DUSE_BAREMETAL \
-D$(KRD_BOARD)

ifeq ($(DEBUG), 1)
C_DEFS +=  \
-DDEBUG \
-DVERBOSE
endif

ifeq ($(KRD_BOARD),KRD_FW_MP)
BUILD_VERSION := $(BUILD_VERSION)_MP
endif
ifeq ($(KRD_BOARD),KRD_FW_LP)
BUILD_VERSION := $(BUILD_VERSION)_LP
endif


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-IDrivers/STM32WLxx_HAL_Driver/Inc \
-IDrivers/STM32WLxx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32WLxx/Include \
-IDrivers/CMSIS/Include \
-I$(KINEIS_DIR)/Lib \
-I$(KINEIS_DIR)/Extdep/Conf \
-I$(KINEIS_DIR)/Extdep/Mcu/Inc \
-I$(KINEIS_DIR)/Extdep/MGR_LOG/Inc \
-I$(KINEIS_DIR)/App/Kineis_os/KNS_Q/Inc \
-I$(KINEIS_DIR)/App/Kineis_os/KNS_OS/Inc \
-I$(KINEIS_DIR)/App/. \
-I$(KINEIS_DIR)/App/Managers/MGR_AT_CMD/Inc \
-I$(KINEIS_DIR)/App/Mcu/Inc \
-I$(KINEIS_DIR)/App/Libs/STRUTIL/Inc \
-I$(KINEIS_DIR)/App/Libs/USERDATA/Inc


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32WL55XX_FLASH_CM4.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo '==== Build with libkineis.a completed ===='

#######################################
# Generate DOC
#######################################
# generate doc (doxygen framework), configure some dynamic parameters from Makefile
doc: Doxyfile
	(cat $< ; \
echo $(CFLAGS) | xargs -n1 echo | grep "^-D" | sed 's/-D//' | xargs echo PREDEFINED= ; \
echo PROJECT_NUMBER= $(KINEIS_VERSION); \
echo OUTPUT_DIRECTORY=$(DOC_DIR) ; \
echo INPUT= $(KINEIS_DIR)/README.md $(subst -I,,$(C_INCLUDES)) ; \
echo EXCLUDE=$(DOC_DIR) ; \
echo EXCLUDE_PATTERNS=*/UnitTest*/* */IntegrationTest*/* */extra_inc/* */extra_src/* */FreeRTOS/*; \
echo EXCLUDE_PATTERNS+=*/Tools/*; \
echo EXCLUDE_PATTERNS+=*/kineis_sw/Extlib/*; \
echo EXCLUDE_PATTERNS+=*/Drivers/STM32*/* */Drivers/CMSIS*/* */Core/*; \
echo USE_MDFILE_AS_MAINPAGE= $(KINEIS_DIR)/README.md; \
echo WARN_LOGFILE=$(DOXY_WARN_LOGFILE)) \
| doxygen -

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) -L$(KINEIS_DIR)/Lib/. -Wl,--whole-archive -lkineis -Wl,--no-whole-archive $(LDFLAGS) -o $@
	$(SZ) -t $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -R $(BUILD_DIR)

doc_clean:
	-rm -R $(DOC_DIR)
	-rm   $(DOXY_WARN_LOGFILE)
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)


.PHONY: doc doc_clean
# *** EOF ***